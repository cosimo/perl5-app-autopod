#!/usr/bin/env perl
#
# Automatically generate and print the boilerplate documentation
# for a given module/class to standard output.
#
# Assumes lots of things for now, and its unbelievably crappy...
#
# Usage:
#     autopod ./my/module/name.pm
#
# Advanced usage:
#     autopod --template=somefile.pod ./my/module/name.pm
#
# The template file is searched for in:
#
# - The current directory (".")
# - Your home directory ($HOME environment variable)
# - $HOME/.autopod/templates
# - /etc/autopod/templates
#
# Cosimo, 26/03/2009
#
# $Id: autopod 14178 2009-09-11 12:16:08Z cosimo $

use strict;
use warnings;
use App::autopod;

if (! @ARGV) {
    print STDERR
        "Usage: $0 <module.pm>\n",
        "       $0 --template=<sometemplate.pod> <module.pm>\n";
    die "\n";
}

# Get template file
my $file = undef;
if ($ARGV[0] =~ m{^ \-\-? template =? \s* (\S+) $}mx) {
    $file = $1;
    shift @ARGV;
}

for (@ARGV) {
    my $mod = $_;

    my $class = App::autopod::get_class($mod);
    (my $testless_class = $class) =~ s{^Test::}{};

    my $tmpl = {
        '__FUNCTIONS__' => App::autopod::get_subs($mod),
        '__USER__'      => $ENV{USER},
        '__FULLNAME__'  => $ENV{DEBFULLNAME} || ucfirst $ENV{USER},
        '__CLASS__'     => $class,
        '__TESTLESS_CLASS__' => $testless_class,
        '__YEAR__'      => (localtime())[5] + 1900,
    };

    my $fh = defined $file
        ? App::autopod::open_template($file)
        : App::autopod::default_template_fh();

    while(<$fh>) {
        s[(__\w+__)][$tmpl->{$1}]eg;
        print;
    }

    close $fh;

}


